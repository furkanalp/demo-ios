{"version":3,"file":"674.js","mappings":"yJAEO,MAAMA,UAAyBC,EAAAA,EAGlC,4BAAMC,CAAuBC,GACzB,OAAOC,QAAQC,SACnB,CAGA,qBAAMC,CAAgBH,GAClB,MAAO,CAAEI,KAAMC,aAAaC,QAAQN,EAAQO,aAChD,CAEA,qBAAMC,CAAgBR,GAElB,OADAK,aAAaI,QAAQT,EAAQO,YAAaP,EAAQI,MAC3CH,QAAQC,SACnB,CAEA,wBAAMQ,CAAmBV,GAErB,OAAa,OADAK,aAAaC,QAAQN,EAAQO,cAEtCF,aAAaM,WAAWX,EAAQO,aACzBN,QAAQC,QAAQ,CAAEU,SAAS,KAE/BX,QAAQC,QAAQ,CAAEU,SAAS,GACtC,CACA,WAAMC,GACF,MAAM,KAAEC,SAAeC,KAAKC,gBAAgB,CAAEC,OAAQF,KAAKE,SAI3D,OAHAH,EAAKI,SAASC,IACVd,aAAaM,WAAWQ,EAAI,IAEzBlB,QAAQC,SACnB,CAGA,0BAAMkB,CAAqBpB,GACvBe,KAAKM,cAAc,sCACvB,CAEA,qBAAML,CAAgBhB,GAClB,MAAMc,EAAO,GACb,IAAK,IAAIQ,EAAI,EAAGA,EAAIjB,aAAakB,OAAQD,IAAK,CAC1C,MAAMH,EAAMd,aAAac,IAAIG,IACzBH,aAAiC,EAASA,EAAIK,WAAWxB,EAAQiB,UACjEH,EAAKW,KAAKN,EAElB,CACA,OAAOlB,QAAQC,QAAQ,CAAEY,QAC7B,E","sources":["webpack://ds-mobile/./node_modules/@aparajita/capacitor-secure-storage/dist/esm/web.js"],"sourcesContent":["import { SecureStorageBase } from './base';\n// eslint-disable-next-line import/prefer-default-export\nexport class SecureStorageWeb extends SecureStorageBase {\n    // @native\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    async setSynchronizeKeychain(options) {\n        return Promise.resolve();\n    }\n    // @native\n    // eslint-disable-next-line @typescript-eslint/require-await\n    async internalGetItem(options) {\n        return { data: localStorage.getItem(options.prefixedKey) };\n    }\n    // @native\n    async internalSetItem(options) {\n        localStorage.setItem(options.prefixedKey, options.data);\n        return Promise.resolve();\n    }\n    // @native\n    async internalRemoveItem(options) {\n        const item = localStorage.getItem(options.prefixedKey);\n        if (item !== null) {\n            localStorage.removeItem(options.prefixedKey);\n            return Promise.resolve({ success: true });\n        }\n        return Promise.resolve({ success: false });\n    }\n    async clear() {\n        const { keys } = await this.getPrefixedKeys({ prefix: this.prefix });\n        keys.forEach((key) => {\n            localStorage.removeItem(key);\n        });\n        return Promise.resolve();\n    }\n    // @native\n    // eslint-disable-next-line @typescript-eslint/require-await,@typescript-eslint/no-unused-vars\n    async clearItemsWithPrefix(options) {\n        this.unimplemented('clearItemsWithPrefix is native only');\n    }\n    // @native\n    async getPrefixedKeys(options) {\n        const keys = [];\n        for (let i = 0; i < localStorage.length; i++) {\n            const key = localStorage.key(i);\n            if (key === null || key === void 0 ? void 0 : key.startsWith(options.prefix)) {\n                keys.push(key);\n            }\n        }\n        return Promise.resolve({ keys });\n    }\n}\n"],"names":["SecureStorageWeb","SecureStorageBase","setSynchronizeKeychain","options","Promise","resolve","internalGetItem","data","localStorage","getItem","prefixedKey","internalSetItem","setItem","internalRemoveItem","removeItem","success","clear","keys","this","getPrefixedKeys","prefix","forEach","key","clearItemsWithPrefix","unimplemented","i","length","startsWith","push"],"sourceRoot":""}