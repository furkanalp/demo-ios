"use strict";(self.webpackChunkds_mobile=self.webpackChunkds_mobile||[]).push([[9],{518:(e,t,r)=>{r.d(t,{p:()=>n});var i=r(9223);const s=(0,i.fo)("App",{web:()=>r.e(544).then(r.bind(r,544)).then((e=>new e.AppWeb))});class n extends i.Uw{addResumeListener(e){return s.addListener("appStateChange",(({isActive:t})=>{t&&this.checkBiometry().then((t=>{e(t)})).catch(console.error)}))}}},9:(e,t,r)=>{r.r(t),r.d(t,{BiometricAuthWeb:()=>o});var i=r(518),s=r(1667),n=r(8309);class o extends i.p{constructor(){super(...arguments),this.biometryType=s.dz.none}async checkBiometry(){return Promise.resolve({isAvailable:this.biometryType!==s.dz.none,biometryType:this.biometryType,reason:"",code:s.Ds.none})}async authenticate(e){return this.checkBiometry().then((({isAvailable:t,biometryType:r})=>{if(t){if(confirm((null==e?void 0:e.reason)||`Authenticate with ${(0,n.S)(r)}?`))return;throw new s.AB("User cancelled",s.Ds.userCancel)}throw new s.AB("Biometry not available",s.Ds.biometryNotAvailable)}))}async setBiometryType(e){return void 0===e||("string"==typeof e?s.dz.hasOwnProperty(e)&&(this.biometryType=s.dz[e]):this.biometryType=e),Promise.resolve()}}}}]);
//# sourceMappingURL=9.js.map