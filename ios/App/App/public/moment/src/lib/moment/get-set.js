import{normalizeUnits,normalizeObjectUnits}from"../units/aliases";import{getPrioritizedUnits}from"../units/priorities";import{hooks}from"../utils/hooks";import isFunction from"../utils/is-function";import{daysInMonth}from"../units/month";import{isLeapYear}from"../utils/is-leap-year";import toInt from"../utils/to-int";export function makeGetSet(t,i){return function(n){return null!=n?(set(this,t,n),hooks.updateOffset(this,i),this):get(this,t)}}export function get(t,i){return t.isValid()?t._d["get"+(t._isUTC?"UTC":"")+i]():NaN}export function set(t,i,n){t.isValid()&&!isNaN(n)&&("FullYear"===i&&isLeapYear(t.year())&&1===t.month()&&29===t.date()?(n=toInt(n),t._d["set"+(t._isUTC?"UTC":"")+i](n,t.month(),daysInMonth(n,t.month()))):t._d["set"+(t._isUTC?"UTC":"")+i](n))}export function stringGet(t){return t=normalizeUnits(t),isFunction(this[t])?this[t]():this}export function stringSet(t,i){if("object"==typeof t){t=normalizeObjectUnits(t);var n,o=getPrioritizedUnits(t),s=o.length;for(n=0;n<s;n++)this[o[n].unit](t[o[n].unit])}else if(t=normalizeUnits(t),isFunction(this[t]))return this[t](i);return this}