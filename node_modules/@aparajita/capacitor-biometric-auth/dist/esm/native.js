import { BiometricAuthBase } from './base';
import { BiometryErrorType, BiometryType } from './definitions';
// eslint-disable-next-line import/prefer-default-export
export class BiometricAuthNative extends BiometricAuthBase {
    constructor(capProxy) {
        super();
        this.checkBiometry = capProxy.checkBiometry;
        this.authenticate = capProxy.authenticate;
    }
    async checkBiometry() {
        // Never used, satisfy the compiler
        return Promise.resolve({
            isAvailable: true,
            biometryType: BiometryType.none,
            reason: '',
            code: BiometryErrorType.none,
        });
    }
    // eslint-disable-next-line @typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function
    async authenticate(options) { }
    // eslint-disable-next-line @typescript-eslint/require-await
    async setBiometryType(
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    type) {
        throw this.unimplemented('setBiometryType is web only');
    }
}
